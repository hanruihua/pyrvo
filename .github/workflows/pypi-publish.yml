# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pypi Publish

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install delocate (macOS)
      if: matrix.os == 'macos-latest'
      run: python -m pip install --upgrade pip && python -m pip install delocate
    - name: Install cibuildwheel
      run: python -m pip install --upgrade pip && python -m pip install cibuildwheel
    - name: Build wheels
      env:
        CIBW_ARCHS_MACOS: universal2
        CIBW_SKIP: cp38-*
        CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=11.0 CMAKE_ARGS="-DBUILD_TESTING=OFF" CMAKE_OSX_ARCHITECTURES="arm64;x86_64"
        # Bundle and fix @rpath deps into the wheel on macOS
        CIBW_REPAIR_WHEEL_COMMAND_MACOS: delocate-listdeps {wheel} && delocate-wheel -v -w {dest_dir} {wheel}
        # Minimal import smoke test after wheel install
        CIBW_TEST_COMMAND_MACOS: python -c "import pyrvo; print('pyrvo ok')"
      run: python -m cibuildwheel --output-dir wheelhouse
    - name: Upload wheels artifact
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: wheelhouse/*.whl

  build_sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Build sdist
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m build --sdist
    - name: Upload sdist artifact
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz

  publish:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
    - name: Download built artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: '*'
        path: dist
        merge-multiple: true
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist



